{
  "pretty-ts-errors.serverName": "vtsls",
  "pretty-ts-errors.separateDiagnostics": true,
  "coc.preferences.extensionUpdateUIInTab": true,
  "volar.disableFormatting": true,
  "json.format.enable": false,
  "javascript.format.enable": false,
  "svelte.plugin.svelte.format.enable": false,
  "Lua.format.enable": false,
  "css.format.enable": false,
  "yaml.format.enable": false,
  "html.format.enable": false,
  "scss.format.enable": false,
  "less.format.enable": false,
  "typescript.format.enable": false,
  "suggest.insertMode": "insert",
  "svelte.enable-ts-plugin": true,
  "copilot.kindLabel": "cpil",
  "copilot.enablePreselect": false,
  // "less.completion.triggerPropertyValueCompletion": false, // 导致异步补全源堵塞 nvim
  // "css.completion.triggerPropertyValueCompletion": false,
  // "scss.completion.triggerPropertyValueCompletion": false,
  "colors.enable": true,
  "semanticTokens.enable": false,
  "snippets.userSnippetsDirectory": "~/.config/nvim/_self/ultisnips",
  "session.directory": "~/.vimsessions",
  "diagnostic.virtualTextPrefix": "  ",
  // "suggest.triggerCompletionWait": 50, // 和 copilot.vim 的 copilot_idle_delay 配合使用（设成一样的值）也许有效，可以降低补全源堵塞 nvim 的概率
  // "diagnostic.errorSign": "",
  // "diagnostic.warningSign": "",
  // "diagnostic.hintSign": "",
  // "diagnostic.infoSign": "",
  "diagnostic.errorSign": "",
  "diagnostic.warningSign": "",
  "diagnostic.infoSign": "",
  "diagnostic.hintSign": "",
  "coc.preferences.maxFileSize": "5MB",
  "snippets.extends": {
    "less": ["basiccss"],
    "css": ["basiccss"],
    "scss": ["basiccss"],
    "javascript": ["javascript", "basicjs"],
    "typescript": ["typescript", "basicjs"],
    "javascriptreact": ["javascript", "javascriptreact", "basicjs", "basicjsx"],
    "typescriptreact": ["typescript", "typescriptreact", "basicjs", "basicjsx"],
    "vue": ["vue", "javascript", "typescript"],
    "markdown": ["misc"]
  },
  "outline.autoPreview": true,
  "outline.sortBy": "position",
  "outline.togglePreviewKey": "p",
  "outline.showLineNumber": true,
  "tree.closedIcon": "",
  "tree.openedIcon": "",
  "tree.key.close": "q",
  "git.addGBlameToBufferVar": true,
  "git.changedSign.hlGroup": "CocGitSignChange",
  "git.addedSign.hlGroup": "CocGitSignAdd",
  "git.removedSign.hlGroup": "CocGitSignDelete",
  "git.topRemovedSign.hlGroup": "CocGitSignDelete",
  "git.changeRemovedSign.hlGroup": "CocGitSignChange",
  "git.changedSign.text": "◆",
  "git.addedSign.text": "●",
  "git.removedSign.text": "▬",
  "git.changeRemovedSign.text": "▼",
  "git.topRemovedSign.text": "▲",
  // "git.changedSign.text": "▏",
  // "git.addedSign.text": "▏",
  // "git.removedSign.text": "▏",
  // "git.changeRemovedSign.text": "▏",
  // "git.topRemovedSign.text": "▏",
  // "git.changedSign.text": "▌",
  // "git.addedSign.text": "▌",
  // "git.removedSign.text": "▌",
  // "git.changeRemovedSign.text": "▌",
  // "git.topRemovedSign.text": "▌",
  // "git.changedDecorator": " 󰃙",
  // "git.stagedDecorator": " 󰃘",
  // "git.untrackedDecorator": " ✩",
  // "git.conflictedDecorator": "⇡⇣",
  "git.virtualTextPrefix": "  ",
  "git.changedDecorator": "[C]",
  "git.stagedDecorator": "[S]",
  "git.untrackedDecorator": "[UT]",
  "git.conflictedDecorator": "[CF]",
  "list.height": 6,
  "list.maxPreviewHeight": 21,
  "list.indicator": "❯",
  "list.menuAction": true,
  "list.source.location.defaultAction": "drop",
  "list.floatPreview": false,
  "git.addGBlameToVirtualText": false,
  "list.source.grep.useLiteral": false,
  "suggest.snippetIndicator": " ✩",
  "suggest.autoTrigger": "always",
  "suggest.virtualText": false,
  "list.interactiveDebounceTime": 2000, // only for interactive supported list
  "list.source.grep.command": "rg",
  "list.source.files.command": "rg",
  // "list.source.grep.args": ["-i", "--hidden", "--sort-files"],
  "list.source.grep.args": ["--column", "--smart-case", "--hidden", "--sort-files", "--multiline", "--vimgrep"],
  "list.source.grep.excludePatterns": ["**/.git/**"],
  "list.source.files.args": ["--files", "--hidden"],
  "list.source.files.excludePatterns": ["**/.git/**"],
  "diagnostic.virtualText": false,
  "diagnostic.virtualTextCurrentLineOnly": true,
  "suggest.completionItemKindLabels": {
    "keyword": "kwrd",
    "variable": "var",
    "value": "val",
    "operator": "opr",
    "constructor": "ctor",
    "function": "func",
    "reference": "ref",
    "constant": "cnst",
    "method": "meth",
    "struct": "stru",
    "class": "clas",
    "interface": "intf",
    "text": "txt",
    "enum": "enum",
    "enumMember": "emem",
    "module": "modu",
    "color": "colr",
    "property": "prop",
    "field": "fld",
    "unit": "unit",
    "event": "evnt",
    "file": "file",
    "folder": "fold",
    "snippet": "snip",
    "typeParameter": "tparam",
    "default": "deflt"
  },
  // "suggest.completionItemKindLabels": {
  //   "keyword": "",
  //   "variable": "",
  //   "value": "",
  //   "operator": "Ψ",
  //   "constructor": "",
  //   "function": "ƒ",
  //   "reference": "",
  //   "constant": "󰏿",
  //   "method": "",
  //   "struct": "",
  //   "class": "",
  //   "interface": "",
  //   "text": "",
  //   "enum": "",
  //   "enumMember": "",
  //   "module": "",
  //   "color": "",
  //   "property": "",
  //   "field": "",
  //   "unit": "",
  //   "event": "",
  //   "file": "󰈤",
  //   "folder": "",
  //   "snippet": "",
  //   "typeParameter": "󰈩",
  //   "default": ""
  // },
  "suggest.labelMaxLength": 30,
  "suggest.floatConfig": {
    "border": true,
    "rounded": true,
    "highlight": "Normal",
    // "borderhighlight": "LspInfoBorder",
    "winblend": 0
  },
  "suggest.pumFloatConfig": {
    "border": true,
    "rounded": true,
    "highlight": "Normal",
    // "borderhighlight": "LspInfoBorder",
    "winblend": 0
  },
  "floatFactory.floatConfig": {
    "border": [1, 1, 1, 1], // or bool
    "rounded": true,
    "highlight": "Normal",
    // "borderhighlight": "LspInfoBorder",
    "winblend": 0
  },
  "suggest.timeout": 5000,
  "coc.preferences.extensionUpdateCheck": "never",
  "diagnostic.checkCurrentLine": false,
  "diagnostic.separateRelatedInformationAsDiagnostics": false, // 会导致自定义语言服务器超级卡
  "git.semanticCommit.scope": false,
  "suggest.detailField": "abbr",
  "suggest.defaultSortMethod": "none",
  "coc.source.file.ignoreHidden": false,
  "git.conflict.enabled": false,
  "suggest.selection": "first",
  "lightbulb.enableSign": false,
  "lightbulb.virtualTextPosition": "eol",
  "notification.statusLineProgress": true,
  "hover.target": "float",
  "diagnostic.messageTarget": "float",
  "signature.target": "float",
  "markdown-preview-enhanced.liveUpdate": true,
  "markdown-preview-enhanced.scrollSync": true,
  "markdown-preview-enhanced.singlePreview": true,
  "markdown-preview-enhanced.mathRenderingOption": "None",
  "diagnostic.autoRefresh": true,
  "diagnostic.refreshOnInsertMode": false,
  "diagnostic.messageDelay": 200, // default 200
  "diagnostic-languageserver.enable": true,
  "list.source.tags.command": "ctags -R --options=$HOME/.ctags .",
  // "list.source.tags.command": "find \\( -name '*.js' -or -name '*.ts' -or -name '*.tsx' -or -name '*.jsx' \\) ! -path './node_modules/*' ! -path './lib/*' ! -path './build/*' ! -path './dist/*' -exec ctags --langmap=typescript:.tsx.ts {} +",
  "list.normalMappings": {
    "P": "do:previewtoggle",
    "<c-a>": "do:selectall",
    "<c-s>": "do:switch",
    "<c-o>": "do:jumpback",
    "<c-q>": "action:quickfix",
    // "<c-q>": "feedkeys:\\<tab>",
    "<tab>": "do:toggle",
    "<space>": "do:chooseaction",
    "<down>": "do:previewdown",
    "<up>": "do:previewup"
  },
  "list.insertMappings": {
    "<c-p>": "do:previewtoggle",
    "<c-a>": "do:selectall",
    "<c-s>": "do:switch",
    "<c-o>": "do:jumpback",
    "<c-q>": "action:quickfix",
    "<tab>": "do:toggle",
    // "<tab>": "do:togglemode", // 等于是 <c-i> 的行为, 终端无法区分 <tab> 和 <c-i>
    "<down>": "do:previewdown",
    "<up>": "do:previewup"
  },
  "diagnostic-languageserver.filetypes": {
    "typescriptreact": "eslint_d",
    "typescript": "eslint_d",
    "javascript": "eslint_d",
    "javascriptreact": "eslint_d",
    "javascript.jsx": "eslint_d",
    "typescript.tsx": "eslint_d",
    "sql": "sql-lint",
    // "sql": "sqlfluff",
    // "vue": ["eslint_d", "stylelint"],
    "css": "csslint",
    "less": "lesslint",
    "scss": "scsslint"
  },
  "diagnostic-languageserver.formatFiletypes": {
    "html": "prettierd",
    "typescriptreact": "prettierd",
    "typescript": "prettierd",
    "javascript": "prettierd",
    "javascriptreact": "prettierd",
    "markdown": "prettierd",
    "json": "prettierd",
    "jsonc": "prettierd",
    "css": "prettierd",
    "scss": "prettierd",
    "less": "prettierd",
    "vue": "prettierd",
    "nginx": "nginxfmt",
    "lua": "luafmt",
    "sql": "pg",
    "zsh": "beautysh",
    "yaml": "prettier",
    "sh": "shfmt"
  },
  "diagnostic-languageserver.formatters": {
    "prettierd": {
      "command": "prettierd",
      "args": ["%filename"],
      "rootPatterns": ["package.json"],
      "isStdout": true,
      "isStderr": true
    },
    "nginxfmt": {
      "command": "nginxfmt",
      "args": ["-p", "-"],
      "isStdout": true,
      "isStderr": true
    },
    "luafmt": {
      "command": "lua-format",
      "args": ["--config", "/home/hexh/.config/nvim/_self/lang-configs/lua/formatter.conf"],
      "isStdout": true,
      "isStderr": true
    },
    "pg": {
      "command": "pg_format",
      "args": ["-"],
      "isStdout": true,
      "isStderr": true
    },
    "beautysh": {
      "command": "beautysh",
      "args": ["-i", 2, "-"],
      "isStdout": true,
      "isStderr": true
    },
    "prettier": {
      "command": "prettier",
      "args": ["--stdin-filepath", "%filename"],
      "isStdout": true,
      "isStderr": true
    },
    "shfmt": {
      "command": "shfmt",
      "args": ["-i", 2],
      "isStdout": true,
      "isStderr": true
    }
  },
  "diagnostic-languageserver.linters": {
    // 另外记得 stdin 模式下不能在 args 中使用 %file，否则 diagnostic-languageserver 不会进行标准输入，换成 %filename 即可
    "biome": {
      "command": "npx",
      "isStderr": true,
      "rootPatterns": [".git", "biome.json"],
      "debounce": 550,
      "args": ["biome", "lint", "--stdin-file-path", "%filename"],
      "sourceName": "biome",
      "formatLines": 999,
      "formatPattern": [
        "^.*?(\\d+):(\\d+)\u0020(\\S+)\u0020+(\\S*).*(\n.*?)+\u0020\u0020×\u0020(.*)(\n.*?)+((\u0020\u0020i\u0020.+\n.*\n)+)",
        {
          "line": 1,
          "column": 2,
          "message": [6, "\n\n", 8],
          "sourceName": 3,
          // "sourceNameFilter": true,
          // "endLine": 5,
          // "endColumn": 3,
          "security": 4
        }
      ],
      "securities": {
        "FIXABLE": "warning"
      }
    },
    "sqlfluff": {
      "command": "sqlfluff",
      "rootPatterns": [".git"], // For cwd
      "debounce": 550, //  shouldBe: debounce 550 < CursorMoved start_time 1000 - (CursorHoldDelay(updatetime)  200 + systemDelay about 100)
      "args": ["lint", "--dialect", "mysql", "--format", "json", "--ignore", "parsing", "-"],
      "sourceName": "sqlfluff",
      "parseJson": {
        "errorsRoot": "[0].violations",
        "line": "line_no",
        "column": "column_pos",
        // "endLine": "endLine",
        // "endColumn": "endColumn",
        "message": "${description} [${code}]",
        "security": "severity"
      },
      "securities": {
        // "0": "info",
        "1": "warning",
        "2": "error"
      }
    },
    "sql-lint": {
      "command": "sql-lint",
      "debounce": 550, //  shouldBe: debounce 550 < CursorMoved start_time 1000 - (CursorHoldDelay(updatetime)  200 + systemDelay about 100)
      "sourceName": "sql-lint",
      // "offsetLine": 0,
      // "offsetColumn": 1,
      "formatPattern": [
        "^([^:]+):(\\d+)\u0020(.*)",
        {
          "line": 2,
          // "column": 3,
          "message": [3]
          // "sourceName": 1,
          // "sourceNameFilter": true,
          // "endLine": 2,
          // "endColumn": 3,
          // "security": 4
        }
      ]
    },
    "eslint_d": {
      "command": "eslint_d",
      "rootPatterns": [".git"], // For cwd
      "debounce": 550, //  shouldBe: debounce 550 < CursorMoved start_time 1000 - (CursorHoldDelay(updatetime)  200 + systemDelay about 100)
      "args": ["--stdin", "--stdin-filename", "%filepath", "--format", "json"],
      "sourceName": "eslint_d",
      "parseJson": {
        "errorsRoot": "[0].messages",
        "line": "line",
        "column": "column",
        "endLine": "endLine",
        "endColumn": "endColumn",
        "message": "${message} [${ruleId}]",
        "security": "severity"
      },
      "securities": {
        // "0": "info",
        "1": "warning",
        "2": "error"
      }
    },
    "tseslint_d": {
      "command": "eslint_d",
      "rootPatterns": [".git"], // For cwd
      "debounce": 550, //  shouldBe: debounce 550 < CursorMoved start_time 1000 - (CursorHoldDelay(updatetime)  200 + systemDelay about 100)
      "args": [
        "--stdin",
        "--stdin-filename",
        "%filepath",
        "--format",
        "json",
        "--config",
        "/home/hexh/.config/nvim/_self/lang-configs/typescript/linter.js"
      ],
      "sourceName": "eslint_d",
      "parseJson": {
        "errorsRoot": "[0].messages",
        "line": "line",
        "column": "column",
        "endLine": "endLine",
        "endColumn": "endColumn",
        "message": "${message} [${ruleId}]",
        "security": "severity"
      },
      "securities": {
        // "0": "info",
        "1": "warning",
        "2": "error"
      }
    },
    "scsslint": {
      "command": "./node_modules/.bin/stylelint", // if no local stylelint, will use the global
      "rootPatterns": [".git"], // For cwd
      "debounce": 550,
      "args": [
        "-f",
        "compact",
        "--config",
        "/home/hexh/.config/nvim/_self/lang-configs/scss/linter.js" // 要用绝对路径
      ],
      "offsetLine": 0,
      "offsetColumn": 0,
      "sourceName": "stylelint",
      "isStderr": false,
      "isStdout": true,
      "formatLines": 1,
      "formatPattern": [
        "^[^:]+:\\D+(\\d+)\\D+(\\d+)\\W+(\\w+)\\s-\\s(.*)$",
        {
          "line": 1,
          "column": 2,
          "message": 4,
          "security": 3
        }
      ],
      "securities": {
        // "error": "error",
        "error": "info",
        "warning": "info"
      }
    },
    "csslint": {
      "command": "./node_modules/.bin/stylelint",
      "rootPatterns": [".git"],
      "debounce": 550,
      "args": ["-f", "compact", "--config", "/home/hexh/.config/nvim/_self/lang-configs/css/linter.js"],
      "offsetLine": 0,
      "offsetColumn": 0,
      "sourceName": "stylelint",
      "isStderr": false,
      "isStdout": true,
      "formatLines": 1,
      "formatPattern": [
        "^[^:]+:\\D+(\\d+)\\D+(\\d+)\\W+(\\w+)\\s-\\s(.*)$",
        {
          "line": 1,
          "column": 2,
          "message": 4,
          "security": 3
        }
      ],
      "securities": {
        // "error": "error",
        "error": "info",
        "warning": "info"
      }
    },
    "lesslint": {
      "command": "./node_modules/.bin/stylelint",
      "rootPatterns": [".git"],
      "debounce": 550,
      "args": ["-f", "compact", "--config", "/home/hexh/.config/nvim/_self/lang-configs/less/linter.js"],
      "offsetLine": 0,
      "offsetColumn": 0,
      "sourceName": "stylelint",
      "isStderr": false,
      "isStdout": true,
      "formatLines": 1,
      "formatPattern": [
        "^[^:]+:\\D+(\\d+)\\D+(\\d+)\\W+(\\w+)\\s-\\s(.*)$",
        {
          "line": 1,
          "column": 2,
          "message": 4,
          "security": 3
        }
      ],
      "securities": {
        "error": "info",
        "warning": "info"
      }
    }
  },
  // "codeLens.position": "top"
  "todo-tree.tags": [
    {
      "tagName": "todo",
      "regex": "@todo",
      "icon": {
        "text": "",
        "hlGroup": "CocInfoSign"
      }
    },
    {
      "tagName": "todo ",
      "regex": "TODO",
      "icon": {
        "text": "",
        "hlGroup": "CocInfoSign"
      }
    }
  ],
  "todo-tree.fileIcon": {
    "text": "",
    "hlGroup": "WarningMsg"
  },
  "todo-tree.folderIcon": {
    "text": "",
    "hlGroup": "DefxIconsOpenedTreeIcon"
  },
  "todo-tree.defaultView": "tagsOnly",
  "inlayHint.display": true,
  "inlayHint.enable": false,
  "inlayHint.enableParameter": true,
  "inlayHint.refreshOnInsertMode": true,
  // "tsserver.tsdk": "/opt/visual-studio-code/resources/app/extensions/node_modules/typescript/lib",
  // "tsserver.log": "verbose",
  "typescript.suggest.completeFunctionCalls": false,
  "tsserver.useSyntaxServer": "auto",
  "tsserver.maxTsServerMemory": 16384,
  "tsserver.locale": "auto",
  "tsserver.useLocalTsdk": false,
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,
  "rust-analyzer.disableProgressNotifications": true,
  "rust-analyzer.check.command": "clippy",
  "Lua.diagnostics.globals": ["vim"],
  "tsserver.enable": false,
  // "rust-analyzer.check.overrideCommand": ["cargo", "clippy", "--message-format=json-diagnostic-rendered-ansi"],
  "languageserver": {
    "taplo": {
      "command": "taplo",
      "args": ["lsp", "stdio"],
      "filetypes": ["toml"],
      "rootPatterns": ["*.toml", ".git"]
    },
    "typescript": {
      "enable": false,
      "command": "typescript-language-server",
      "args": ["--stdio"],
      "rootPatterns": ["package.json", ".git", ".editorconfig"],
      // "trace.server": "verbose",
      "filetypes": [
        "typescript",
        "typescriptreact",
        "javascript",
        "javascriptreact",
        "typescript.tsx",
        "javascript.jsx"
      ],
      "disabledFeatures": ["documentFormatting", "formatting", "documentRangeFormatting", "documentOnTypeFormatting"],
      "initializationOptions": {
        "maxTsServerMemory": 16384,
        "tsserver": {
          "path": "/home/hexh/.config/coc/extensions/node_modules/coc-tsserver/node_modules/typescript/lib/tsserver.js"
          // "trace": "verbose"
          // "logVerbosity": "verbose"
        }
      },
      "settings": {
        "completions.completeFunctionCalls": false,
        // "typescript.inlayHints.includeInlayParameterNameHints": "all",
        // "typescript.inlayHints.includeInlayParameterNameHintsWhenArgumentMatchesName": true,
        "typescript.inlayHints.includeInlayFunctionParameterTypeHints": true,
        "typescript.inlayHints.includeInlayVariableTypeHints": true,
        "typescript.inlayHints.includeInlayEnumMemberValueHints": true,
        "typescript.inlayHints.includeInlayFunctionLikeReturnTypeHints": true,
        "typescript.inlayHints.includeInlayPropertyDeclarationTypeHints": true,
        "typescript.inlayHints.includeInlayVariableTypeHintsWhenTypeMatchesName": true
      }
    },
    "vtsls": {
      "enable": true,
      "command": "vtsls",
      "args": ["--stdio"],
      "rootPatterns": ["package.json", ".git", ".editorconfig"],
      // "trace.server": "verbose",
      "filetypes": [
        "typescript",
        "typescriptreact",
        "javascript",
        "javascriptreact",
        "typescript.tsx",
        "javascript.jsx"
      ],
      "disabledFeatures": ["documentFormatting", "formatting", "documentRangeFormatting", "documentOnTypeFormatting"],
      "initializationOptions": {},
      "settings": {
        "typescript.locale": "en", // 必须要传这个值，否则 vtsls 的补全会报错，不知道为什么
        "typescript.format.enable": false,
        "typescript.tsserver.useSyntaxServer": "auto",
        "typescript.suggest.completeFunctionCalls": false,
        "typescript.tsdk": "/home/hexh/.config/coc/extensions/node_modules/coc-tsserver/node_modules/typescript/lib",
        "typescript.tsserver.maxTsServerMemory": 16384,
        "typescript.inlayHints.parameterTypes.enabled": true,
        "typescript.inlayHints.variableTypes.enabled": true,
        "typescript.inlayHints.enumMemberValues.enabled": true,
        "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
        "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
        "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,
        "vtsls.autoUseWorkspaceTsdk": true
      }
    }
  }
}
